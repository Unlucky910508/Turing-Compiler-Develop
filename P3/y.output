Terminals unused in grammar

   SEMICOLON
   LC
   RC
   CHAR
   DEFAULT
   DO


State 27 conflicts: 24 reduce/reduce
State 38 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: Declarations $@1 Statements

    3 Declarations: Declaration Declarations
    4             | Eplision

    5 Declaration: const_declaration
    6            | var_declaration
    7            | funtion_declaration

    8 const_declaration: const_token ID assign_token exp
    9                  | const_token ID COLON Type assign_token exp

   10 var_declaration: var_token ID assign_token exp
   11                | var_token ID COLON Type assign_token exp
   12                | var_token ID COLON Type
   13                | var_token ID COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF Type

   14 $@2: %empty

   15 funtion_declaration: function_token ID LP Arguments_token RP COLON Type $@2 no_function_programs END ID

   16 $@3: %empty

   17 funtion_declaration: procedure_token ID LP Arguments RP $@3 no_function_programs END ID

   18 Statements: Statement Statements
   19           | Eplision

   20 Statement: simple_statement
   21          | exp
   22          | conditional_statement
   23          | loop_statement
   24          | block_statement

   25 simple_statement: ID assign_token exp
   26                 | get_statement

   27 $@4: %empty

   28 simple_statement: PUT $@4 exp
   29                 | RETURN
   30                 | RESULT exp
   31                 | SKIP
   32                 | EXIT exit_statement
   33                 | EXIT

   34 $@5: %empty

   35 $@6: %empty

   36 conditional_statement: if_token exp THEN $@5 no_function_programs $@6 if_Statement END if_token

   37 if_Statement: else_token no_function_program
   38             | %empty

   39 loop_statement: loop_loop
   40               | for_loop

   41 block_statement: begin_token no_function_programs END

   42 get_statement: GET ID_token

   43 exit_statement: Eplision
   44               | WHEN exp

   45 loop_loop: loop_token no_function_programs END LOOP

   46 $@7: %empty

   47 $@8: %empty

   48 for_loop: for_token ID COLON exp $@7 PERIOD PERIOD exp $@8 no_function_programs END for_token

   49 $@9: %empty

   50 $@10: %empty

   51 for_loop: for_token DECREASING ID COLON exp $@9 PERIOD PERIOD exp $@10 no_function_programs END for_token

   52 no_function_programs: no_function_program no_function_programs
   53                     | Eplision

   54 no_function_program: var_declaration
   55                    | const_declaration
   56                    | Statement

   57 exp: or_exp

   58 or_exp: and_exp
   59       | or_exp OR and_exp

   60 and_exp: not_exp
   61        | and_exp AND not_exp

   62 not_exp: compare_exp
   63        | NOT compare_exp

   64 compare_exp: add_exp
   65            | compare_exp LT add_exp
   66            | compare_exp NMT add_exp
   67            | compare_exp NLT add_exp
   68            | compare_exp MT add_exp
   69            | compare_exp EQUAL add_exp
   70            | compare_exp NEQUAL add_exp

   71 add_exp: multi_exp
   72        | add_exp MINUS multi_exp
   73        | add_exp PLUS multi_exp

   74 multi_exp: unary_exp
   75          | multi_exp MULTIPLY unary_exp
   76          | multi_exp DIVISION unary_exp
   77          | multi_exp MOD unary_exp

   78 unary_exp: all_value
   79          | unary_op all_value

   80 all_value: ID_token
   81          | const_value
   82          | ID LP_token input_Arguments RP_token
   83          | LP_token exp RP_token
   84          | ID_token LB_token exp RB_token

   85 unary_op: MINUS

   86 const_token: CONST

   87 var_token: VAR

   88 function_token: FUNCTION

   89 procedure_token: PROCEDURE

   90 assign_token: ASSIGN

   91 if_token: IF

   92 else_token: ELSE

   93 loop_token: LOOP

   94 for_token: FOR

   95 begin_token: BBEGIN

   96 ID_token: ID

   97 LP_token: LP

   98 RP_token: RP

   99 LB_token: LB

  100 RB_token: RB

  101 Arguments_token: Arguments

  102 Arguments: F_Argument R_Arguments
  103          | Eplision

  104 R_Arguments: R_Argument R_Arguments
  105            | Eplision

  106 F_Argument: ID COLON Type
  107           | ID COLON INTEGER PERIOD PERIOD INTEGER OF Type

  108 R_Argument: COMMA F_Argument

  109 input_Arguments: F_input R_inputs
  110                | Eplision

  111 R_inputs: R_input R_inputs
  112         | Eplision

  113 F_input: exp

  114 R_input: COMMA exp

  115 Type: INT
  116     | REAL
  117     | STRING
  118     | BOOL

  119 const_value: INTEGER
  120            | FLOAT
  121            | SSTRING
  122            | booling

  123 booling: TTRUE
  124        | FFALSE

  125 Eplision: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
PERIOD (258) 13 48 51 107
COMMA (259) 108 114
COLON (260) 9 11 12 13 15 48 51 106 107
SEMICOLON (261)
LP (262) 15 17 97
RP (263) 15 17 98
LB (264) 99
RB (265) 100
LC (266)
RC (267)
PLUS (268) 73
MINUS (269) 72 85
MULTIPLY (270) 75
DIVISION (271) 76
MOD (272) 77
ASSIGN (273) 90
LT (274) 65
NMT (275) 66
NLT (276) 67
MT (277) 68
EQUAL (278) 69
NEQUAL (279) 70
AND (280) 61
OR (281) 59
NOT (282) 63
ARRAY (283) 13
BBEGIN (284) 95
BOOL (285) 118
CHAR (286)
CONST (287) 86
DECREASING (288) 51
DEFAULT (289)
DO (290)
ELSE (291) 92
END (292) 15 17 36 41 45 48 51
EXIT (293) 32 33
FFALSE (294) 124
FOR (295) 94
FUNCTION (296) 88
GET (297) 42
IF (298) 91
INT (299) 115
LOOP (300) 45 93
OF (301) 13 107
PUT (302) 28
PROCEDURE (303) 89
REAL (304) 116
RESULT (305) 30
RETURN (306) 29
SKIP (307) 31
STRING (308) 117
THEN (309) 36
TTRUE (310) 123
VAR (311) 87
WHEN (312) 44
UMINUS (313)
ID (314) 8 9 10 11 12 13 15 17 25 48 51 82 96 106 107
INTEGER (315) 13 107 119
FLOAT (316) 120
SSTRING (317) 121


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
program (64)
    on left: 2, on right: 0
$@1 (65)
    on left: 1, on right: 2
Declarations (66)
    on left: 3 4, on right: 2 3
Declaration (67)
    on left: 5 6 7, on right: 3
const_declaration (68)
    on left: 8 9, on right: 5 55
var_declaration (69)
    on left: 10 11 12 13, on right: 6 54
funtion_declaration (70)
    on left: 15 17, on right: 7
$@2 (71)
    on left: 14, on right: 15
$@3 (72)
    on left: 16, on right: 17
Statements (73)
    on left: 18 19, on right: 2 18
Statement (74)
    on left: 20 21 22 23 24, on right: 18 56
simple_statement (75)
    on left: 25 26 28 29 30 31 32 33, on right: 20
$@4 (76)
    on left: 27, on right: 28
conditional_statement (77)
    on left: 36, on right: 22
$@5 (78)
    on left: 34, on right: 36
$@6 (79)
    on left: 35, on right: 36
if_Statement (80)
    on left: 37 38, on right: 36
loop_statement (81)
    on left: 39 40, on right: 23
block_statement (82)
    on left: 41, on right: 24
get_statement (83)
    on left: 42, on right: 26
exit_statement (84)
    on left: 43 44, on right: 32
loop_loop (85)
    on left: 45, on right: 39
for_loop (86)
    on left: 48 51, on right: 40
$@7 (87)
    on left: 46, on right: 48
$@8 (88)
    on left: 47, on right: 48
$@9 (89)
    on left: 49, on right: 51
$@10 (90)
    on left: 50, on right: 51
no_function_programs (91)
    on left: 52 53, on right: 15 17 36 41 45 48 51 52
no_function_program (92)
    on left: 54 55 56, on right: 37 52
exp (93)
    on left: 57, on right: 8 9 10 11 21 25 28 30 36 44 48 51 83 84
    113 114
or_exp (94)
    on left: 58 59, on right: 57 59
and_exp (95)
    on left: 60 61, on right: 58 59 61
not_exp (96)
    on left: 62 63, on right: 60 61
compare_exp (97)
    on left: 64 65 66 67 68 69 70, on right: 62 63 65 66 67 68 69 70
add_exp (98)
    on left: 71 72 73, on right: 64 65 66 67 68 69 70 72 73
multi_exp (99)
    on left: 74 75 76 77, on right: 71 72 73 75 76 77
unary_exp (100)
    on left: 78 79, on right: 74 75 76 77
all_value (101)
    on left: 80 81 82 83 84, on right: 78 79
unary_op (102)
    on left: 85, on right: 79
const_token (103)
    on left: 86, on right: 8 9
var_token (104)
    on left: 87, on right: 10 11 12 13
function_token (105)
    on left: 88, on right: 15
procedure_token (106)
    on left: 89, on right: 17
assign_token (107)
    on left: 90, on right: 8 9 10 11 25
if_token (108)
    on left: 91, on right: 36
else_token (109)
    on left: 92, on right: 37
loop_token (110)
    on left: 93, on right: 45
for_token (111)
    on left: 94, on right: 48 51
begin_token (112)
    on left: 95, on right: 41
ID_token (113)
    on left: 96, on right: 42 80 84
LP_token (114)
    on left: 97, on right: 82 83
RP_token (115)
    on left: 98, on right: 82 83
LB_token (116)
    on left: 99, on right: 84
RB_token (117)
    on left: 100, on right: 84
Arguments_token (118)
    on left: 101, on right: 15
Arguments (119)
    on left: 102 103, on right: 17 101
R_Arguments (120)
    on left: 104 105, on right: 102 104
F_Argument (121)
    on left: 106 107, on right: 102 108
R_Argument (122)
    on left: 108, on right: 104
input_Arguments (123)
    on left: 109 110, on right: 82
R_inputs (124)
    on left: 111 112, on right: 109 111
F_input (125)
    on left: 113, on right: 109
R_input (126)
    on left: 114, on right: 111
Type (127)
    on left: 115 116 117 118, on right: 9 11 12 13 15 106 107
const_value (128)
    on left: 119 120 121 122, on right: 81
booling (129)
    on left: 123 124, on right: 122
Eplision (130)
    on left: 125, on right: 4 19 43 53 103 105 110 112


State 0

    0 $accept: . program $end

    CONST      shift, and go to state 1
    FUNCTION   shift, and go to state 2
    PROCEDURE  shift, and go to state 3
    VAR        shift, and go to state 4

    $default  reduce using rule 125 (Eplision)

    program              go to state 5
    Declarations         go to state 6
    Declaration          go to state 7
    const_declaration    go to state 8
    var_declaration      go to state 9
    funtion_declaration  go to state 10
    const_token          go to state 11
    var_token            go to state 12
    function_token       go to state 13
    procedure_token      go to state 14
    Eplision             go to state 15


State 1

   86 const_token: CONST .

    $default  reduce using rule 86 (const_token)


State 2

   88 function_token: FUNCTION .

    $default  reduce using rule 88 (function_token)


State 3

   89 procedure_token: PROCEDURE .

    $default  reduce using rule 89 (procedure_token)


State 4

   87 var_token: VAR .

    $default  reduce using rule 87 (var_token)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 16


State 6

    2 program: Declarations . $@1 Statements

    $default  reduce using rule 1 ($@1)

    $@1  go to state 17


State 7

    3 Declarations: Declaration . Declarations

    CONST      shift, and go to state 1
    FUNCTION   shift, and go to state 2
    PROCEDURE  shift, and go to state 3
    VAR        shift, and go to state 4

    $default  reduce using rule 125 (Eplision)

    Declarations         go to state 18
    Declaration          go to state 7
    const_declaration    go to state 8
    var_declaration      go to state 9
    funtion_declaration  go to state 10
    const_token          go to state 11
    var_token            go to state 12
    function_token       go to state 13
    procedure_token      go to state 14
    Eplision             go to state 15


State 8

    5 Declaration: const_declaration .

    $default  reduce using rule 5 (Declaration)


State 9

    6 Declaration: var_declaration .

    $default  reduce using rule 6 (Declaration)


State 10

    7 Declaration: funtion_declaration .

    $default  reduce using rule 7 (Declaration)


State 11

    8 const_declaration: const_token . ID assign_token exp
    9                  | const_token . ID COLON Type assign_token exp

    ID  shift, and go to state 19


State 12

   10 var_declaration: var_token . ID assign_token exp
   11                | var_token . ID COLON Type assign_token exp
   12                | var_token . ID COLON Type
   13                | var_token . ID COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF Type

    ID  shift, and go to state 20


State 13

   15 funtion_declaration: function_token . ID LP Arguments_token RP COLON Type $@2 no_function_programs END ID

    ID  shift, and go to state 21


State 14

   17 funtion_declaration: procedure_token . ID LP Arguments RP $@3 no_function_programs END ID

    ID  shift, and go to state 22


State 15

    4 Declarations: Eplision .

    $default  reduce using rule 4 (Declarations)


State 16

    0 $accept: program $end .

    $default  accept


State 17

    2 program: Declarations $@1 . Statements

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    Statements             go to state 42
    Statement              go to state 43
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 69


State 18

    3 Declarations: Declaration Declarations .

    $default  reduce using rule 3 (Declarations)


State 19

    8 const_declaration: const_token ID . assign_token exp
    9                  | const_token ID . COLON Type assign_token exp

    COLON   shift, and go to state 70
    ASSIGN  shift, and go to state 71

    assign_token  go to state 72


State 20

   10 var_declaration: var_token ID . assign_token exp
   11                | var_token ID . COLON Type assign_token exp
   12                | var_token ID . COLON Type
   13                | var_token ID . COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF Type

    COLON   shift, and go to state 73
    ASSIGN  shift, and go to state 71

    assign_token  go to state 74


State 21

   15 funtion_declaration: function_token ID . LP Arguments_token RP COLON Type $@2 no_function_programs END ID

    LP  shift, and go to state 75


State 22

   17 funtion_declaration: procedure_token ID . LP Arguments RP $@3 no_function_programs END ID

    LP  shift, and go to state 76


State 23

   97 LP_token: LP .

    $default  reduce using rule 97 (LP_token)


State 24

   85 unary_op: MINUS .

    $default  reduce using rule 85 (unary_op)


State 25

   63 not_exp: NOT . compare_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    compare_exp  go to state 78
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 26

   95 begin_token: BBEGIN .

    $default  reduce using rule 95 (begin_token)


State 27

   32 simple_statement: EXIT . exit_statement
   33                 | EXIT .

    WHEN  shift, and go to state 79

    $end      reduce using rule 33 (simple_statement)
    $end      [reduce using rule 125 (Eplision)]
    LP        reduce using rule 33 (simple_statement)
    LP        [reduce using rule 125 (Eplision)]
    MINUS     reduce using rule 33 (simple_statement)
    MINUS     [reduce using rule 125 (Eplision)]
    NOT       reduce using rule 33 (simple_statement)
    NOT       [reduce using rule 125 (Eplision)]
    BBEGIN    reduce using rule 33 (simple_statement)
    BBEGIN    [reduce using rule 125 (Eplision)]
    CONST     reduce using rule 33 (simple_statement)
    CONST     [reduce using rule 125 (Eplision)]
    ELSE      reduce using rule 33 (simple_statement)
    ELSE      [reduce using rule 125 (Eplision)]
    END       reduce using rule 33 (simple_statement)
    END       [reduce using rule 125 (Eplision)]
    EXIT      reduce using rule 33 (simple_statement)
    EXIT      [reduce using rule 125 (Eplision)]
    FFALSE    reduce using rule 33 (simple_statement)
    FFALSE    [reduce using rule 125 (Eplision)]
    FOR       reduce using rule 33 (simple_statement)
    FOR       [reduce using rule 125 (Eplision)]
    GET       reduce using rule 33 (simple_statement)
    GET       [reduce using rule 125 (Eplision)]
    IF        reduce using rule 33 (simple_statement)
    IF        [reduce using rule 125 (Eplision)]
    LOOP      reduce using rule 33 (simple_statement)
    LOOP      [reduce using rule 125 (Eplision)]
    PUT       reduce using rule 33 (simple_statement)
    PUT       [reduce using rule 125 (Eplision)]
    RESULT    reduce using rule 33 (simple_statement)
    RESULT    [reduce using rule 125 (Eplision)]
    RETURN    reduce using rule 33 (simple_statement)
    RETURN    [reduce using rule 125 (Eplision)]
    SKIP      reduce using rule 33 (simple_statement)
    SKIP      [reduce using rule 125 (Eplision)]
    TTRUE     reduce using rule 33 (simple_statement)
    TTRUE     [reduce using rule 125 (Eplision)]
    VAR       reduce using rule 33 (simple_statement)
    VAR       [reduce using rule 125 (Eplision)]
    ID        reduce using rule 33 (simple_statement)
    ID        [reduce using rule 125 (Eplision)]
    INTEGER   reduce using rule 33 (simple_statement)
    INTEGER   [reduce using rule 125 (Eplision)]
    FLOAT     reduce using rule 33 (simple_statement)
    FLOAT     [reduce using rule 125 (Eplision)]
    SSTRING   reduce using rule 33 (simple_statement)
    SSTRING   [reduce using rule 125 (Eplision)]
    $default  reduce using rule 33 (simple_statement)

    exit_statement  go to state 80
    Eplision        go to state 81


State 28

  124 booling: FFALSE .

    $default  reduce using rule 124 (booling)


State 29

   94 for_token: FOR .

    $default  reduce using rule 94 (for_token)


State 30

   42 get_statement: GET . ID_token

    ID  shift, and go to state 82

    ID_token  go to state 83


State 31

   91 if_token: IF .

    $default  reduce using rule 91 (if_token)


State 32

   93 loop_token: LOOP .

    $default  reduce using rule 93 (loop_token)


State 33

   28 simple_statement: PUT . $@4 exp

    $default  reduce using rule 27 ($@4)

    $@4  go to state 84


State 34

   30 simple_statement: RESULT . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 85
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 35

   29 simple_statement: RETURN .

    $default  reduce using rule 29 (simple_statement)


State 36

   31 simple_statement: SKIP .

    $default  reduce using rule 31 (simple_statement)


State 37

  123 booling: TTRUE .

    $default  reduce using rule 123 (booling)


State 38

   25 simple_statement: ID . assign_token exp
   82 all_value: ID . LP_token input_Arguments RP_token
   96 ID_token: ID .

    LP      shift, and go to state 23
    ASSIGN  shift, and go to state 71

    LP        [reduce using rule 96 (ID_token)]
    $default  reduce using rule 96 (ID_token)

    assign_token  go to state 86
    LP_token      go to state 87


State 39

  119 const_value: INTEGER .

    $default  reduce using rule 119 (const_value)


State 40

  120 const_value: FLOAT .

    $default  reduce using rule 120 (const_value)


State 41

  121 const_value: SSTRING .

    $default  reduce using rule 121 (const_value)


State 42

    2 program: Declarations $@1 Statements .

    $default  reduce using rule 2 (program)


State 43

   18 Statements: Statement . Statements

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    Statements             go to state 88
    Statement              go to state 43
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 69


State 44

   20 Statement: simple_statement .

    $default  reduce using rule 20 (Statement)


State 45

   22 Statement: conditional_statement .

    $default  reduce using rule 22 (Statement)


State 46

   23 Statement: loop_statement .

    $default  reduce using rule 23 (Statement)


State 47

   24 Statement: block_statement .

    $default  reduce using rule 24 (Statement)


State 48

   26 simple_statement: get_statement .

    $default  reduce using rule 26 (simple_statement)


State 49

   39 loop_statement: loop_loop .

    $default  reduce using rule 39 (loop_statement)


State 50

   40 loop_statement: for_loop .

    $default  reduce using rule 40 (loop_statement)


State 51

   21 Statement: exp .

    $default  reduce using rule 21 (Statement)


State 52

   57 exp: or_exp .
   59 or_exp: or_exp . OR and_exp

    OR  shift, and go to state 89

    $default  reduce using rule 57 (exp)


State 53

   58 or_exp: and_exp .
   61 and_exp: and_exp . AND not_exp

    AND  shift, and go to state 90

    $default  reduce using rule 58 (or_exp)


State 54

   60 and_exp: not_exp .

    $default  reduce using rule 60 (and_exp)


State 55

   62 not_exp: compare_exp .
   65 compare_exp: compare_exp . LT add_exp
   66            | compare_exp . NMT add_exp
   67            | compare_exp . NLT add_exp
   68            | compare_exp . MT add_exp
   69            | compare_exp . EQUAL add_exp
   70            | compare_exp . NEQUAL add_exp

    LT      shift, and go to state 91
    NMT     shift, and go to state 92
    NLT     shift, and go to state 93
    MT      shift, and go to state 94
    EQUAL   shift, and go to state 95
    NEQUAL  shift, and go to state 96

    $default  reduce using rule 62 (not_exp)


State 56

   64 compare_exp: add_exp .
   72 add_exp: add_exp . MINUS multi_exp
   73        | add_exp . PLUS multi_exp

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    MINUS     [reduce using rule 64 (compare_exp)]
    $default  reduce using rule 64 (compare_exp)


State 57

   71 add_exp: multi_exp .
   75 multi_exp: multi_exp . MULTIPLY unary_exp
   76          | multi_exp . DIVISION unary_exp
   77          | multi_exp . MOD unary_exp

    MULTIPLY  shift, and go to state 99
    DIVISION  shift, and go to state 100
    MOD       shift, and go to state 101

    $default  reduce using rule 71 (add_exp)


State 58

   74 multi_exp: unary_exp .

    $default  reduce using rule 74 (multi_exp)


State 59

   78 unary_exp: all_value .

    $default  reduce using rule 78 (unary_exp)


State 60

   79 unary_exp: unary_op . all_value

    LP       shift, and go to state 23
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    all_value    go to state 102
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 61

   36 conditional_statement: if_token . exp THEN $@5 no_function_programs $@6 if_Statement END if_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 103
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 62

   45 loop_loop: loop_token . no_function_programs END LOOP

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_programs   go to state 107
    no_function_program    go to state 108
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 109


State 63

   48 for_loop: for_token . ID COLON exp $@7 PERIOD PERIOD exp $@8 no_function_programs END for_token
   51         | for_token . DECREASING ID COLON exp $@9 PERIOD PERIOD exp $@10 no_function_programs END for_token

    DECREASING  shift, and go to state 110
    ID          shift, and go to state 111


State 64

   41 block_statement: begin_token . no_function_programs END

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_programs   go to state 112
    no_function_program    go to state 108
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 109


State 65

   80 all_value: ID_token .
   84          | ID_token . LB_token exp RB_token

    LB  shift, and go to state 113

    $default  reduce using rule 80 (all_value)

    LB_token  go to state 114


State 66

   83 all_value: LP_token . exp RP_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 115
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 67

   81 all_value: const_value .

    $default  reduce using rule 81 (all_value)


State 68

  122 const_value: booling .

    $default  reduce using rule 122 (const_value)


State 69

   19 Statements: Eplision .

    $default  reduce using rule 19 (Statements)


State 70

    9 const_declaration: const_token ID COLON . Type assign_token exp

    BOOL    shift, and go to state 116
    INT     shift, and go to state 117
    REAL    shift, and go to state 118
    STRING  shift, and go to state 119

    Type  go to state 120


State 71

   90 assign_token: ASSIGN .

    $default  reduce using rule 90 (assign_token)


State 72

    8 const_declaration: const_token ID assign_token . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 121
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 73

   11 var_declaration: var_token ID COLON . Type assign_token exp
   12                | var_token ID COLON . Type
   13                | var_token ID COLON . ARRAY INTEGER PERIOD PERIOD INTEGER OF Type

    ARRAY   shift, and go to state 122
    BOOL    shift, and go to state 116
    INT     shift, and go to state 117
    REAL    shift, and go to state 118
    STRING  shift, and go to state 119

    Type  go to state 123


State 74

   10 var_declaration: var_token ID assign_token . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 124
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 75

   15 funtion_declaration: function_token ID LP . Arguments_token RP COLON Type $@2 no_function_programs END ID

    ID  shift, and go to state 125

    $default  reduce using rule 125 (Eplision)

    Arguments_token  go to state 126
    Arguments        go to state 127
    F_Argument       go to state 128
    Eplision         go to state 129


State 76

   17 funtion_declaration: procedure_token ID LP . Arguments RP $@3 no_function_programs END ID

    ID  shift, and go to state 125

    $default  reduce using rule 125 (Eplision)

    Arguments   go to state 130
    F_Argument  go to state 128
    Eplision    go to state 129


State 77

   82 all_value: ID . LP_token input_Arguments RP_token
   96 ID_token: ID .

    LP  shift, and go to state 23

    LP        [reduce using rule 96 (ID_token)]
    $default  reduce using rule 96 (ID_token)

    LP_token  go to state 87


State 78

   63 not_exp: NOT compare_exp .
   65 compare_exp: compare_exp . LT add_exp
   66            | compare_exp . NMT add_exp
   67            | compare_exp . NLT add_exp
   68            | compare_exp . MT add_exp
   69            | compare_exp . EQUAL add_exp
   70            | compare_exp . NEQUAL add_exp

    LT      shift, and go to state 91
    NMT     shift, and go to state 92
    NLT     shift, and go to state 93
    MT      shift, and go to state 94
    EQUAL   shift, and go to state 95
    NEQUAL  shift, and go to state 96

    $default  reduce using rule 63 (not_exp)


State 79

   44 exit_statement: WHEN . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 131
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 80

   32 simple_statement: EXIT exit_statement .

    $default  reduce using rule 32 (simple_statement)


State 81

   43 exit_statement: Eplision .

    $default  reduce using rule 43 (exit_statement)


State 82

   96 ID_token: ID .

    $default  reduce using rule 96 (ID_token)


State 83

   42 get_statement: GET ID_token .

    $default  reduce using rule 42 (get_statement)


State 84

   28 simple_statement: PUT $@4 . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 132
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 85

   30 simple_statement: RESULT exp .

    $default  reduce using rule 30 (simple_statement)


State 86

   25 simple_statement: ID assign_token . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 133
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 87

   82 all_value: ID LP_token . input_Arguments RP_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    exp              go to state 134
    or_exp           go to state 52
    and_exp          go to state 53
    not_exp          go to state 54
    compare_exp      go to state 55
    add_exp          go to state 56
    multi_exp        go to state 57
    unary_exp        go to state 58
    all_value        go to state 59
    unary_op         go to state 60
    ID_token         go to state 65
    LP_token         go to state 66
    input_Arguments  go to state 135
    F_input          go to state 136
    const_value      go to state 67
    booling          go to state 68
    Eplision         go to state 137


State 88

   18 Statements: Statement Statements .

    $default  reduce using rule 18 (Statements)


State 89

   59 or_exp: or_exp OR . and_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    and_exp      go to state 138
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 90

   61 and_exp: and_exp AND . not_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    not_exp      go to state 139
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 91

   65 compare_exp: compare_exp LT . add_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    add_exp      go to state 140
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 92

   66 compare_exp: compare_exp NMT . add_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    add_exp      go to state 141
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 93

   67 compare_exp: compare_exp NLT . add_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    add_exp      go to state 142
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 94

   68 compare_exp: compare_exp MT . add_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    add_exp      go to state 143
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 95

   69 compare_exp: compare_exp EQUAL . add_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    add_exp      go to state 144
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 96

   70 compare_exp: compare_exp NEQUAL . add_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    add_exp      go to state 145
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 97

   73 add_exp: add_exp PLUS . multi_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    multi_exp    go to state 146
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 98

   72 add_exp: add_exp MINUS . multi_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    multi_exp    go to state 147
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 99

   75 multi_exp: multi_exp MULTIPLY . unary_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    unary_exp    go to state 148
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 100

   76 multi_exp: multi_exp DIVISION . unary_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    unary_exp    go to state 149
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 101

   77 multi_exp: multi_exp MOD . unary_exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    unary_exp    go to state 150
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 102

   79 unary_exp: unary_op all_value .

    $default  reduce using rule 79 (unary_exp)


State 103

   36 conditional_statement: if_token exp . THEN $@5 no_function_programs $@6 if_Statement END if_token

    THEN  shift, and go to state 151


State 104

   55 no_function_program: const_declaration .

    $default  reduce using rule 55 (no_function_program)


State 105

   54 no_function_program: var_declaration .

    $default  reduce using rule 54 (no_function_program)


State 106

   56 no_function_program: Statement .

    $default  reduce using rule 56 (no_function_program)


State 107

   45 loop_loop: loop_token no_function_programs . END LOOP

    END  shift, and go to state 152


State 108

   52 no_function_programs: no_function_program . no_function_programs

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_programs   go to state 153
    no_function_program    go to state 108
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 109


State 109

   53 no_function_programs: Eplision .

    $default  reduce using rule 53 (no_function_programs)


State 110

   51 for_loop: for_token DECREASING . ID COLON exp $@9 PERIOD PERIOD exp $@10 no_function_programs END for_token

    ID  shift, and go to state 154


State 111

   48 for_loop: for_token ID . COLON exp $@7 PERIOD PERIOD exp $@8 no_function_programs END for_token

    COLON  shift, and go to state 155


State 112

   41 block_statement: begin_token no_function_programs . END

    END  shift, and go to state 156


State 113

   99 LB_token: LB .

    $default  reduce using rule 99 (LB_token)


State 114

   84 all_value: ID_token LB_token . exp RB_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 157
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 115

   83 all_value: LP_token exp . RP_token

    RP  shift, and go to state 158

    RP_token  go to state 159


State 116

  118 Type: BOOL .

    $default  reduce using rule 118 (Type)


State 117

  115 Type: INT .

    $default  reduce using rule 115 (Type)


State 118

  116 Type: REAL .

    $default  reduce using rule 116 (Type)


State 119

  117 Type: STRING .

    $default  reduce using rule 117 (Type)


State 120

    9 const_declaration: const_token ID COLON Type . assign_token exp

    ASSIGN  shift, and go to state 71

    assign_token  go to state 160


State 121

    8 const_declaration: const_token ID assign_token exp .

    $default  reduce using rule 8 (const_declaration)


State 122

   13 var_declaration: var_token ID COLON ARRAY . INTEGER PERIOD PERIOD INTEGER OF Type

    INTEGER  shift, and go to state 161


State 123

   11 var_declaration: var_token ID COLON Type . assign_token exp
   12                | var_token ID COLON Type .

    ASSIGN  shift, and go to state 71

    $default  reduce using rule 12 (var_declaration)

    assign_token  go to state 162


State 124

   10 var_declaration: var_token ID assign_token exp .

    $default  reduce using rule 10 (var_declaration)


State 125

  106 F_Argument: ID . COLON Type
  107           | ID . COLON INTEGER PERIOD PERIOD INTEGER OF Type

    COLON  shift, and go to state 163


State 126

   15 funtion_declaration: function_token ID LP Arguments_token . RP COLON Type $@2 no_function_programs END ID

    RP  shift, and go to state 164


State 127

  101 Arguments_token: Arguments .

    $default  reduce using rule 101 (Arguments_token)


State 128

  102 Arguments: F_Argument . R_Arguments

    COMMA  shift, and go to state 165

    $default  reduce using rule 125 (Eplision)

    R_Arguments  go to state 166
    R_Argument   go to state 167
    Eplision     go to state 168


State 129

  103 Arguments: Eplision .

    $default  reduce using rule 103 (Arguments)


State 130

   17 funtion_declaration: procedure_token ID LP Arguments . RP $@3 no_function_programs END ID

    RP  shift, and go to state 169


State 131

   44 exit_statement: WHEN exp .

    $default  reduce using rule 44 (exit_statement)


State 132

   28 simple_statement: PUT $@4 exp .

    $default  reduce using rule 28 (simple_statement)


State 133

   25 simple_statement: ID assign_token exp .

    $default  reduce using rule 25 (simple_statement)


State 134

  113 F_input: exp .

    $default  reduce using rule 113 (F_input)


State 135

   82 all_value: ID LP_token input_Arguments . RP_token

    RP  shift, and go to state 158

    RP_token  go to state 170


State 136

  109 input_Arguments: F_input . R_inputs

    COMMA  shift, and go to state 171

    $default  reduce using rule 125 (Eplision)

    R_inputs  go to state 172
    R_input   go to state 173
    Eplision  go to state 174


State 137

  110 input_Arguments: Eplision .

    $default  reduce using rule 110 (input_Arguments)


State 138

   59 or_exp: or_exp OR and_exp .
   61 and_exp: and_exp . AND not_exp

    AND  shift, and go to state 90

    $default  reduce using rule 59 (or_exp)


State 139

   61 and_exp: and_exp AND not_exp .

    $default  reduce using rule 61 (and_exp)


State 140

   65 compare_exp: compare_exp LT add_exp .
   72 add_exp: add_exp . MINUS multi_exp
   73        | add_exp . PLUS multi_exp

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 65 (compare_exp)


State 141

   66 compare_exp: compare_exp NMT add_exp .
   72 add_exp: add_exp . MINUS multi_exp
   73        | add_exp . PLUS multi_exp

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 66 (compare_exp)


State 142

   67 compare_exp: compare_exp NLT add_exp .
   72 add_exp: add_exp . MINUS multi_exp
   73        | add_exp . PLUS multi_exp

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 67 (compare_exp)


State 143

   68 compare_exp: compare_exp MT add_exp .
   72 add_exp: add_exp . MINUS multi_exp
   73        | add_exp . PLUS multi_exp

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 68 (compare_exp)


State 144

   69 compare_exp: compare_exp EQUAL add_exp .
   72 add_exp: add_exp . MINUS multi_exp
   73        | add_exp . PLUS multi_exp

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 69 (compare_exp)


State 145

   70 compare_exp: compare_exp NEQUAL add_exp .
   72 add_exp: add_exp . MINUS multi_exp
   73        | add_exp . PLUS multi_exp

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    $default  reduce using rule 70 (compare_exp)


State 146

   73 add_exp: add_exp PLUS multi_exp .
   75 multi_exp: multi_exp . MULTIPLY unary_exp
   76          | multi_exp . DIVISION unary_exp
   77          | multi_exp . MOD unary_exp

    MULTIPLY  shift, and go to state 99
    DIVISION  shift, and go to state 100
    MOD       shift, and go to state 101

    $default  reduce using rule 73 (add_exp)


State 147

   72 add_exp: add_exp MINUS multi_exp .
   75 multi_exp: multi_exp . MULTIPLY unary_exp
   76          | multi_exp . DIVISION unary_exp
   77          | multi_exp . MOD unary_exp

    MULTIPLY  shift, and go to state 99
    DIVISION  shift, and go to state 100
    MOD       shift, and go to state 101

    $default  reduce using rule 72 (add_exp)


State 148

   75 multi_exp: multi_exp MULTIPLY unary_exp .

    $default  reduce using rule 75 (multi_exp)


State 149

   76 multi_exp: multi_exp DIVISION unary_exp .

    $default  reduce using rule 76 (multi_exp)


State 150

   77 multi_exp: multi_exp MOD unary_exp .

    $default  reduce using rule 77 (multi_exp)


State 151

   36 conditional_statement: if_token exp THEN . $@5 no_function_programs $@6 if_Statement END if_token

    $default  reduce using rule 34 ($@5)

    $@5  go to state 175


State 152

   45 loop_loop: loop_token no_function_programs END . LOOP

    LOOP  shift, and go to state 176


State 153

   52 no_function_programs: no_function_program no_function_programs .

    $default  reduce using rule 52 (no_function_programs)


State 154

   51 for_loop: for_token DECREASING ID . COLON exp $@9 PERIOD PERIOD exp $@10 no_function_programs END for_token

    COLON  shift, and go to state 177


State 155

   48 for_loop: for_token ID COLON . exp $@7 PERIOD PERIOD exp $@8 no_function_programs END for_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 178
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 156

   41 block_statement: begin_token no_function_programs END .

    $default  reduce using rule 41 (block_statement)


State 157

   84 all_value: ID_token LB_token exp . RB_token

    RB  shift, and go to state 179

    RB_token  go to state 180


State 158

   98 RP_token: RP .

    $default  reduce using rule 98 (RP_token)


State 159

   83 all_value: LP_token exp RP_token .

    $default  reduce using rule 83 (all_value)


State 160

    9 const_declaration: const_token ID COLON Type assign_token . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 181
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 161

   13 var_declaration: var_token ID COLON ARRAY INTEGER . PERIOD PERIOD INTEGER OF Type

    PERIOD  shift, and go to state 182


State 162

   11 var_declaration: var_token ID COLON Type assign_token . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 183
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 163

  106 F_Argument: ID COLON . Type
  107           | ID COLON . INTEGER PERIOD PERIOD INTEGER OF Type

    BOOL     shift, and go to state 116
    INT      shift, and go to state 117
    REAL     shift, and go to state 118
    STRING   shift, and go to state 119
    INTEGER  shift, and go to state 184

    Type  go to state 185


State 164

   15 funtion_declaration: function_token ID LP Arguments_token RP . COLON Type $@2 no_function_programs END ID

    COLON  shift, and go to state 186


State 165

  108 R_Argument: COMMA . F_Argument

    ID  shift, and go to state 125

    F_Argument  go to state 187


State 166

  102 Arguments: F_Argument R_Arguments .

    $default  reduce using rule 102 (Arguments)


State 167

  104 R_Arguments: R_Argument . R_Arguments

    COMMA  shift, and go to state 165

    $default  reduce using rule 125 (Eplision)

    R_Arguments  go to state 188
    R_Argument   go to state 167
    Eplision     go to state 168


State 168

  105 R_Arguments: Eplision .

    $default  reduce using rule 105 (R_Arguments)


State 169

   17 funtion_declaration: procedure_token ID LP Arguments RP . $@3 no_function_programs END ID

    $default  reduce using rule 16 ($@3)

    $@3  go to state 189


State 170

   82 all_value: ID LP_token input_Arguments RP_token .

    $default  reduce using rule 82 (all_value)


State 171

  114 R_input: COMMA . exp

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 190
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 172

  109 input_Arguments: F_input R_inputs .

    $default  reduce using rule 109 (input_Arguments)


State 173

  111 R_inputs: R_input . R_inputs

    COMMA  shift, and go to state 171

    $default  reduce using rule 125 (Eplision)

    R_inputs  go to state 191
    R_input   go to state 173
    Eplision  go to state 174


State 174

  112 R_inputs: Eplision .

    $default  reduce using rule 112 (R_inputs)


State 175

   36 conditional_statement: if_token exp THEN $@5 . no_function_programs $@6 if_Statement END if_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_programs   go to state 192
    no_function_program    go to state 108
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 109


State 176

   45 loop_loop: loop_token no_function_programs END LOOP .

    $default  reduce using rule 45 (loop_loop)


State 177

   51 for_loop: for_token DECREASING ID COLON . exp $@9 PERIOD PERIOD exp $@10 no_function_programs END for_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 193
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 178

   48 for_loop: for_token ID COLON exp . $@7 PERIOD PERIOD exp $@8 no_function_programs END for_token

    $default  reduce using rule 46 ($@7)

    $@7  go to state 194


State 179

  100 RB_token: RB .

    $default  reduce using rule 100 (RB_token)


State 180

   84 all_value: ID_token LB_token exp RB_token .

    $default  reduce using rule 84 (all_value)


State 181

    9 const_declaration: const_token ID COLON Type assign_token exp .

    $default  reduce using rule 9 (const_declaration)


State 182

   13 var_declaration: var_token ID COLON ARRAY INTEGER PERIOD . PERIOD INTEGER OF Type

    PERIOD  shift, and go to state 195


State 183

   11 var_declaration: var_token ID COLON Type assign_token exp .

    $default  reduce using rule 11 (var_declaration)


State 184

  107 F_Argument: ID COLON INTEGER . PERIOD PERIOD INTEGER OF Type

    PERIOD  shift, and go to state 196


State 185

  106 F_Argument: ID COLON Type .

    $default  reduce using rule 106 (F_Argument)


State 186

   15 funtion_declaration: function_token ID LP Arguments_token RP COLON . Type $@2 no_function_programs END ID

    BOOL    shift, and go to state 116
    INT     shift, and go to state 117
    REAL    shift, and go to state 118
    STRING  shift, and go to state 119

    Type  go to state 197


State 187

  108 R_Argument: COMMA F_Argument .

    $default  reduce using rule 108 (R_Argument)


State 188

  104 R_Arguments: R_Argument R_Arguments .

    $default  reduce using rule 104 (R_Arguments)


State 189

   17 funtion_declaration: procedure_token ID LP Arguments RP $@3 . no_function_programs END ID

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_programs   go to state 198
    no_function_program    go to state 108
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 109


State 190

  114 R_input: COMMA exp .

    $default  reduce using rule 114 (R_input)


State 191

  111 R_inputs: R_input R_inputs .

    $default  reduce using rule 111 (R_inputs)


State 192

   36 conditional_statement: if_token exp THEN $@5 no_function_programs . $@6 if_Statement END if_token

    $default  reduce using rule 35 ($@6)

    $@6  go to state 199


State 193

   51 for_loop: for_token DECREASING ID COLON exp . $@9 PERIOD PERIOD exp $@10 no_function_programs END for_token

    $default  reduce using rule 49 ($@9)

    $@9  go to state 200


State 194

   48 for_loop: for_token ID COLON exp $@7 . PERIOD PERIOD exp $@8 no_function_programs END for_token

    PERIOD  shift, and go to state 201


State 195

   13 var_declaration: var_token ID COLON ARRAY INTEGER PERIOD PERIOD . INTEGER OF Type

    INTEGER  shift, and go to state 202


State 196

  107 F_Argument: ID COLON INTEGER PERIOD . PERIOD INTEGER OF Type

    PERIOD  shift, and go to state 203


State 197

   15 funtion_declaration: function_token ID LP Arguments_token RP COLON Type . $@2 no_function_programs END ID

    $default  reduce using rule 14 ($@2)

    $@2  go to state 204


State 198

   17 funtion_declaration: procedure_token ID LP Arguments RP $@3 no_function_programs . END ID

    END  shift, and go to state 205


State 199

   36 conditional_statement: if_token exp THEN $@5 no_function_programs $@6 . if_Statement END if_token

    ELSE  shift, and go to state 206

    $default  reduce using rule 38 (if_Statement)

    if_Statement  go to state 207
    else_token    go to state 208


State 200

   51 for_loop: for_token DECREASING ID COLON exp $@9 . PERIOD PERIOD exp $@10 no_function_programs END for_token

    PERIOD  shift, and go to state 209


State 201

   48 for_loop: for_token ID COLON exp $@7 PERIOD . PERIOD exp $@8 no_function_programs END for_token

    PERIOD  shift, and go to state 210


State 202

   13 var_declaration: var_token ID COLON ARRAY INTEGER PERIOD PERIOD INTEGER . OF Type

    OF  shift, and go to state 211


State 203

  107 F_Argument: ID COLON INTEGER PERIOD PERIOD . INTEGER OF Type

    INTEGER  shift, and go to state 212


State 204

   15 funtion_declaration: function_token ID LP Arguments_token RP COLON Type $@2 . no_function_programs END ID

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_programs   go to state 213
    no_function_program    go to state 108
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 109


State 205

   17 funtion_declaration: procedure_token ID LP Arguments RP $@3 no_function_programs END . ID

    ID  shift, and go to state 214


State 206

   92 else_token: ELSE .

    $default  reduce using rule 92 (else_token)


State 207

   36 conditional_statement: if_token exp THEN $@5 no_function_programs $@6 if_Statement . END if_token

    END  shift, and go to state 215


State 208

   37 if_Statement: else_token . no_function_program

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_program    go to state 216
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68


State 209

   51 for_loop: for_token DECREASING ID COLON exp $@9 PERIOD . PERIOD exp $@10 no_function_programs END for_token

    PERIOD  shift, and go to state 217


State 210

   48 for_loop: for_token ID COLON exp $@7 PERIOD PERIOD . exp $@8 no_function_programs END for_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 218
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 211

   13 var_declaration: var_token ID COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF . Type

    BOOL    shift, and go to state 116
    INT     shift, and go to state 117
    REAL    shift, and go to state 118
    STRING  shift, and go to state 119

    Type  go to state 219


State 212

  107 F_Argument: ID COLON INTEGER PERIOD PERIOD INTEGER . OF Type

    OF  shift, and go to state 220


State 213

   15 funtion_declaration: function_token ID LP Arguments_token RP COLON Type $@2 no_function_programs . END ID

    END  shift, and go to state 221


State 214

   17 funtion_declaration: procedure_token ID LP Arguments RP $@3 no_function_programs END ID .

    $default  reduce using rule 17 (funtion_declaration)


State 215

   36 conditional_statement: if_token exp THEN $@5 no_function_programs $@6 if_Statement END . if_token

    IF  shift, and go to state 31

    if_token  go to state 222


State 216

   37 if_Statement: else_token no_function_program .

    $default  reduce using rule 37 (if_Statement)


State 217

   51 for_loop: for_token DECREASING ID COLON exp $@9 PERIOD PERIOD . exp $@10 no_function_programs END for_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    FFALSE   shift, and go to state 28
    TTRUE    shift, and go to state 37
    ID       shift, and go to state 77
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    exp          go to state 223
    or_exp       go to state 52
    and_exp      go to state 53
    not_exp      go to state 54
    compare_exp  go to state 55
    add_exp      go to state 56
    multi_exp    go to state 57
    unary_exp    go to state 58
    all_value    go to state 59
    unary_op     go to state 60
    ID_token     go to state 65
    LP_token     go to state 66
    const_value  go to state 67
    booling      go to state 68


State 218

   48 for_loop: for_token ID COLON exp $@7 PERIOD PERIOD exp . $@8 no_function_programs END for_token

    $default  reduce using rule 47 ($@8)

    $@8  go to state 224


State 219

   13 var_declaration: var_token ID COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF Type .

    $default  reduce using rule 13 (var_declaration)


State 220

  107 F_Argument: ID COLON INTEGER PERIOD PERIOD INTEGER OF . Type

    BOOL    shift, and go to state 116
    INT     shift, and go to state 117
    REAL    shift, and go to state 118
    STRING  shift, and go to state 119

    Type  go to state 225


State 221

   15 funtion_declaration: function_token ID LP Arguments_token RP COLON Type $@2 no_function_programs END . ID

    ID  shift, and go to state 226


State 222

   36 conditional_statement: if_token exp THEN $@5 no_function_programs $@6 if_Statement END if_token .

    $default  reduce using rule 36 (conditional_statement)


State 223

   51 for_loop: for_token DECREASING ID COLON exp $@9 PERIOD PERIOD exp . $@10 no_function_programs END for_token

    $default  reduce using rule 50 ($@10)

    $@10  go to state 227


State 224

   48 for_loop: for_token ID COLON exp $@7 PERIOD PERIOD exp $@8 . no_function_programs END for_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_programs   go to state 228
    no_function_program    go to state 108
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 109


State 225

  107 F_Argument: ID COLON INTEGER PERIOD PERIOD INTEGER OF Type .

    $default  reduce using rule 107 (F_Argument)


State 226

   15 funtion_declaration: function_token ID LP Arguments_token RP COLON Type $@2 no_function_programs END ID .

    $default  reduce using rule 15 (funtion_declaration)


State 227

   51 for_loop: for_token DECREASING ID COLON exp $@9 PERIOD PERIOD exp $@10 . no_function_programs END for_token

    LP       shift, and go to state 23
    MINUS    shift, and go to state 24
    NOT      shift, and go to state 25
    BBEGIN   shift, and go to state 26
    CONST    shift, and go to state 1
    EXIT     shift, and go to state 27
    FFALSE   shift, and go to state 28
    FOR      shift, and go to state 29
    GET      shift, and go to state 30
    IF       shift, and go to state 31
    LOOP     shift, and go to state 32
    PUT      shift, and go to state 33
    RESULT   shift, and go to state 34
    RETURN   shift, and go to state 35
    SKIP     shift, and go to state 36
    TTRUE    shift, and go to state 37
    VAR      shift, and go to state 4
    ID       shift, and go to state 38
    INTEGER  shift, and go to state 39
    FLOAT    shift, and go to state 40
    SSTRING  shift, and go to state 41

    $default  reduce using rule 125 (Eplision)

    const_declaration      go to state 104
    var_declaration        go to state 105
    Statement              go to state 106
    simple_statement       go to state 44
    conditional_statement  go to state 45
    loop_statement         go to state 46
    block_statement        go to state 47
    get_statement          go to state 48
    loop_loop              go to state 49
    for_loop               go to state 50
    no_function_programs   go to state 229
    no_function_program    go to state 108
    exp                    go to state 51
    or_exp                 go to state 52
    and_exp                go to state 53
    not_exp                go to state 54
    compare_exp            go to state 55
    add_exp                go to state 56
    multi_exp              go to state 57
    unary_exp              go to state 58
    all_value              go to state 59
    unary_op               go to state 60
    const_token            go to state 11
    var_token              go to state 12
    if_token               go to state 61
    loop_token             go to state 62
    for_token              go to state 63
    begin_token            go to state 64
    ID_token               go to state 65
    LP_token               go to state 66
    const_value            go to state 67
    booling                go to state 68
    Eplision               go to state 109


State 228

   48 for_loop: for_token ID COLON exp $@7 PERIOD PERIOD exp $@8 no_function_programs . END for_token

    END  shift, and go to state 230


State 229

   51 for_loop: for_token DECREASING ID COLON exp $@9 PERIOD PERIOD exp $@10 no_function_programs . END for_token

    END  shift, and go to state 231


State 230

   48 for_loop: for_token ID COLON exp $@7 PERIOD PERIOD exp $@8 no_function_programs END . for_token

    FOR  shift, and go to state 29

    for_token  go to state 232


State 231

   51 for_loop: for_token DECREASING ID COLON exp $@9 PERIOD PERIOD exp $@10 no_function_programs END . for_token

    FOR  shift, and go to state 29

    for_token  go to state 233


State 232

   48 for_loop: for_token ID COLON exp $@7 PERIOD PERIOD exp $@8 no_function_programs END for_token .

    $default  reduce using rule 48 (for_loop)


State 233

   51 for_loop: for_token DECREASING ID COLON exp $@9 PERIOD PERIOD exp $@10 no_function_programs END for_token .

    $default  reduce using rule 51 (for_loop)
