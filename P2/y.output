Terminals unused in grammar

   SEMICOLON
   LC
   RC
   CHAR
   DEFAULT
   DO


State 50 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: Declarations Statements

    2 Declarations: Declaration Declarations
    3             | Eplision

    4 Declaration: const_declaration
    5            | var_declaration
    6            | funtion_declaration

    7 const_declaration: const_token ID_token assign_token exp
    8                  | const_token ID_token COLON Type assign_token exp

    9 var_declaration: var_token ID_token assign_token exp
   10                | var_token ID_token COLON Type assign_token exp
   11                | var_token ID_token COLON Type
   12                | var_token ID_token COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF Type

   13 funtion_declaration: function_token ID_token LP Arguments RP COLON Type no_function_program END ID
   14                    | procedure_token ID_token LP Arguments RP no_function_program END ID

   15 Statements: Statement Statements
   16           | Eplision

   17 Statement: simple_statement
   18          | exp
   19          | conditional_statement
   20          | loop_statement
   21          | block_statement

   22 simple_statement: ID_token assign_token exp
   23                 | get_statement
   24                 | PUT exp
   25                 | RETURN
   26                 | RESULT exp
   27                 | SKIP
   28                 | EXIT exit_statement

   29 conditional_statement: if_token exp THEN no_function_program else_token no_function_program END if_token
   30                      | if_token exp THEN no_function_program END if_token

   31 loop_statement: loop_loop
   32               | for_loop

   33 block_statement: begin_token no_function_program END

   34 get_statement: GET ID_token

   35 exit_statement: Eplision
   36               | WHEN exp

   37 loop_loop: loop_token no_function_program END loop_token

   38 for_loop: for_token for_statement COLON exp PERIOD PERIOD exp no_function_program END for_token

   39 for_statement: DECREASING ID
   40              | Eplision ID

   41 no_function_program: variableDeclarations Statements

   42 variableDeclarations: var_declaration variableDeclarations
   43                     | const_declaration variableDeclarations
   44                     | Eplision

   45 exp: or_exp

   46 or_exp: and_exp
   47       | or_exp or_op and_exp

   48 and_exp: not_exp
   49        | and_exp and_op not_exp

   50 not_exp: compare_exp
   51        | not_op compare_exp

   52 compare_exp: add_exp
   53            | compare_exp compare_op add_exp

   54 add_exp: multi_exp
   55        | add_exp add_op multi_exp

   56 multi_exp: unary_exp
   57          | multi_exp multi_op unary_exp

   58 unary_exp: all_value
   59          | unary_op all_value

   60 all_value: ID_token
   61          | const_value
   62          | ID_token LP_token input_Arguments RP_token
   63          | LP_token exp RP_token
   64          | ID_token LB_token exp RB_token

   65 or_op: OR

   66 and_op: AND

   67 not_op: NOT

   68 compare_op: LT
   69           | NMT
   70           | NLT
   71           | MT
   72           | EQUAL
   73           | NEQUAL

   74 add_op: MINUS
   75       | PLUS

   76 multi_op: MULTIPLY
   77         | DIVISION
   78         | MOD

   79 unary_op: MINUS

   80 const_token: CONST

   81 var_token: VAR

   82 function_token: FUNCTION

   83 procedure_token: PROCEDURE

   84 assign_token: ASSIGN

   85 if_token: IF

   86 else_token: ELSE

   87 loop_token: LOOP

   88 for_token: FOR

   89 begin_token: BBEGIN

   90 ID_token: ID

   91 LP_token: LP

   92 RP_token: RP

   93 LB_token: LB

   94 RB_token: RB

   95 Arguments: F_Argument R_Arguments
   96          | Eplision

   97 R_Arguments: R_Argument R_Arguments
   98            | Eplision

   99 F_Argument: ID COLON Type
  100           | ID COLON INTEGER PERIOD PERIOD INTEGER OF Type

  101 R_Argument: COMMA F_Argument

  102 input_Arguments: F_input R_inputs
  103                | Eplision

  104 R_inputs: R_input R_inputs
  105         | Eplision

  106 F_input: exp

  107 R_input: COMMA exp

  108 Type: INT
  109     | REAL
  110     | STRING
  111     | BOOL

  112 const_value: INTEGER
  113            | FLOAT
  114            | SSTRING
  115            | booling

  116 booling: TTRUE
  117        | FFALSE

  118 Eplision: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
PERIOD (258) 12 38 100
COMMA (259) 101 107
COLON (260) 8 10 11 12 13 38 99 100
SEMICOLON (261)
LP (262) 13 14 91
RP (263) 13 14 92
LB (264) 93
RB (265) 94
LC (266)
RC (267)
PLUS (268) 75
MINUS (269) 74 79
MULTIPLY (270) 76
DIVISION (271) 77
MOD (272) 78
ASSIGN (273) 84
LT (274) 68
NMT (275) 69
NLT (276) 70
MT (277) 71
EQUAL (278) 72
NEQUAL (279) 73
AND (280) 66
OR (281) 65
NOT (282) 67
ARRAY (283) 12
BBEGIN (284) 89
BOOL (285) 111
CHAR (286)
CONST (287) 80
DECREASING (288) 39
DEFAULT (289)
DO (290)
ELSE (291) 86
END (292) 13 14 29 30 33 37 38
EXIT (293) 28
FFALSE (294) 117
FOR (295) 88
FUNCTION (296) 82
GET (297) 34
IF (298) 85
INT (299) 108
LOOP (300) 87
OF (301) 12 100
PUT (302) 24
PROCEDURE (303) 83
REAL (304) 109
RESULT (305) 26
RETURN (306) 25
SKIP (307) 27
STRING (308) 110
THEN (309) 29 30
TTRUE (310) 116
VAR (311) 81
WHEN (312) 36
UMINUS (313)
ID (314) 13 14 39 40 90 99 100
INTEGER (315) 12 100 112
FLOAT (316) 113
SSTRING (317) 114


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
program (64)
    on left: 1, on right: 0
Declarations (65)
    on left: 2 3, on right: 1 2
Declaration (66)
    on left: 4 5 6, on right: 2
const_declaration (67)
    on left: 7 8, on right: 4 43
var_declaration (68)
    on left: 9 10 11 12, on right: 5 42
funtion_declaration (69)
    on left: 13 14, on right: 6
Statements (70)
    on left: 15 16, on right: 1 15 41
Statement (71)
    on left: 17 18 19 20 21, on right: 15
simple_statement (72)
    on left: 22 23 24 25 26 27 28, on right: 17
conditional_statement (73)
    on left: 29 30, on right: 19
loop_statement (74)
    on left: 31 32, on right: 20
block_statement (75)
    on left: 33, on right: 21
get_statement (76)
    on left: 34, on right: 23
exit_statement (77)
    on left: 35 36, on right: 28
loop_loop (78)
    on left: 37, on right: 31
for_loop (79)
    on left: 38, on right: 32
for_statement (80)
    on left: 39 40, on right: 38
no_function_program (81)
    on left: 41, on right: 13 14 29 30 33 37 38
variableDeclarations (82)
    on left: 42 43 44, on right: 41 42 43
exp (83)
    on left: 45, on right: 7 8 9 10 18 22 24 26 29 30 36 38 63 64 106
    107
or_exp (84)
    on left: 46 47, on right: 45 47
and_exp (85)
    on left: 48 49, on right: 46 47 49
not_exp (86)
    on left: 50 51, on right: 48 49
compare_exp (87)
    on left: 52 53, on right: 50 51 53
add_exp (88)
    on left: 54 55, on right: 52 53 55
multi_exp (89)
    on left: 56 57, on right: 54 55 57
unary_exp (90)
    on left: 58 59, on right: 56 57
all_value (91)
    on left: 60 61 62 63 64, on right: 58 59
or_op (92)
    on left: 65, on right: 47
and_op (93)
    on left: 66, on right: 49
not_op (94)
    on left: 67, on right: 51
compare_op (95)
    on left: 68 69 70 71 72 73, on right: 53
add_op (96)
    on left: 74 75, on right: 55
multi_op (97)
    on left: 76 77 78, on right: 57
unary_op (98)
    on left: 79, on right: 59
const_token (99)
    on left: 80, on right: 7 8
var_token (100)
    on left: 81, on right: 9 10 11 12
function_token (101)
    on left: 82, on right: 13
procedure_token (102)
    on left: 83, on right: 14
assign_token (103)
    on left: 84, on right: 7 8 9 10 22
if_token (104)
    on left: 85, on right: 29 30
else_token (105)
    on left: 86, on right: 29
loop_token (106)
    on left: 87, on right: 37
for_token (107)
    on left: 88, on right: 38
begin_token (108)
    on left: 89, on right: 33
ID_token (109)
    on left: 90, on right: 7 8 9 10 11 12 13 14 22 34 60 62 64
LP_token (110)
    on left: 91, on right: 62 63
RP_token (111)
    on left: 92, on right: 62 63
LB_token (112)
    on left: 93, on right: 64
RB_token (113)
    on left: 94, on right: 64
Arguments (114)
    on left: 95 96, on right: 13 14
R_Arguments (115)
    on left: 97 98, on right: 95 97
F_Argument (116)
    on left: 99 100, on right: 95 101
R_Argument (117)
    on left: 101, on right: 97
input_Arguments (118)
    on left: 102 103, on right: 62
R_inputs (119)
    on left: 104 105, on right: 102 104
F_input (120)
    on left: 106, on right: 102
R_input (121)
    on left: 107, on right: 104
Type (122)
    on left: 108 109 110 111, on right: 8 10 11 12 13 99 100
const_value (123)
    on left: 112 113 114 115, on right: 61
booling (124)
    on left: 116 117, on right: 115
Eplision (125)
    on left: 118, on right: 3 16 35 40 44 96 98 103 105


State 0

    0 $accept: . program $end

    CONST      shift, and go to state 1
    FUNCTION   shift, and go to state 2
    PROCEDURE  shift, and go to state 3
    VAR        shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    program              go to state 5
    Declarations         go to state 6
    Declaration          go to state 7
    const_declaration    go to state 8
    var_declaration      go to state 9
    funtion_declaration  go to state 10
    const_token          go to state 11
    var_token            go to state 12
    function_token       go to state 13
    procedure_token      go to state 14
    Eplision             go to state 15


State 1

   80 const_token: CONST .

    $default  reduce using rule 80 (const_token)


State 2

   82 function_token: FUNCTION .

    $default  reduce using rule 82 (function_token)


State 3

   83 procedure_token: PROCEDURE .

    $default  reduce using rule 83 (procedure_token)


State 4

   81 var_token: VAR .

    $default  reduce using rule 81 (var_token)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 16


State 6

    1 program: Declarations . Statements

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    BBEGIN   shift, and go to state 20
    EXIT     shift, and go to state 21
    FFALSE   shift, and go to state 22
    FOR      shift, and go to state 23
    GET      shift, and go to state 24
    IF       shift, and go to state 25
    LOOP     shift, and go to state 26
    PUT      shift, and go to state 27
    RESULT   shift, and go to state 28
    RETURN   shift, and go to state 29
    SKIP     shift, and go to state 30
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    $default  reduce using rule 118 (Eplision)

    Statements             go to state 36
    Statement              go to state 37
    simple_statement       go to state 38
    conditional_statement  go to state 39
    loop_statement         go to state 40
    block_statement        go to state 41
    get_statement          go to state 42
    loop_loop              go to state 43
    for_loop               go to state 44
    exp                    go to state 45
    or_exp                 go to state 46
    and_exp                go to state 47
    not_exp                go to state 48
    compare_exp            go to state 49
    add_exp                go to state 50
    multi_exp              go to state 51
    unary_exp              go to state 52
    all_value              go to state 53
    not_op                 go to state 54
    unary_op               go to state 55
    if_token               go to state 56
    loop_token             go to state 57
    for_token              go to state 58
    begin_token            go to state 59
    ID_token               go to state 60
    LP_token               go to state 61
    const_value            go to state 62
    booling                go to state 63
    Eplision               go to state 64


State 7

    2 Declarations: Declaration . Declarations

    CONST      shift, and go to state 1
    FUNCTION   shift, and go to state 2
    PROCEDURE  shift, and go to state 3
    VAR        shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    Declarations         go to state 65
    Declaration          go to state 7
    const_declaration    go to state 8
    var_declaration      go to state 9
    funtion_declaration  go to state 10
    const_token          go to state 11
    var_token            go to state 12
    function_token       go to state 13
    procedure_token      go to state 14
    Eplision             go to state 15


State 8

    4 Declaration: const_declaration .

    $default  reduce using rule 4 (Declaration)


State 9

    5 Declaration: var_declaration .

    $default  reduce using rule 5 (Declaration)


State 10

    6 Declaration: funtion_declaration .

    $default  reduce using rule 6 (Declaration)


State 11

    7 const_declaration: const_token . ID_token assign_token exp
    8                  | const_token . ID_token COLON Type assign_token exp

    ID  shift, and go to state 32

    ID_token  go to state 66


State 12

    9 var_declaration: var_token . ID_token assign_token exp
   10                | var_token . ID_token COLON Type assign_token exp
   11                | var_token . ID_token COLON Type
   12                | var_token . ID_token COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF Type

    ID  shift, and go to state 32

    ID_token  go to state 67


State 13

   13 funtion_declaration: function_token . ID_token LP Arguments RP COLON Type no_function_program END ID

    ID  shift, and go to state 32

    ID_token  go to state 68


State 14

   14 funtion_declaration: procedure_token . ID_token LP Arguments RP no_function_program END ID

    ID  shift, and go to state 32

    ID_token  go to state 69


State 15

    3 Declarations: Eplision .

    $default  reduce using rule 3 (Declarations)


State 16

    0 $accept: program $end .

    $default  accept


State 17

   91 LP_token: LP .

    $default  reduce using rule 91 (LP_token)


State 18

   79 unary_op: MINUS .

    $default  reduce using rule 79 (unary_op)


State 19

   67 not_op: NOT .

    $default  reduce using rule 67 (not_op)


State 20

   89 begin_token: BBEGIN .

    $default  reduce using rule 89 (begin_token)


State 21

   28 simple_statement: EXIT . exit_statement

    WHEN  shift, and go to state 70

    $default  reduce using rule 118 (Eplision)

    exit_statement  go to state 71
    Eplision        go to state 72


State 22

  117 booling: FFALSE .

    $default  reduce using rule 117 (booling)


State 23

   88 for_token: FOR .

    $default  reduce using rule 88 (for_token)


State 24

   34 get_statement: GET . ID_token

    ID  shift, and go to state 32

    ID_token  go to state 73


State 25

   85 if_token: IF .

    $default  reduce using rule 85 (if_token)


State 26

   87 loop_token: LOOP .

    $default  reduce using rule 87 (loop_token)


State 27

   24 simple_statement: PUT . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 74
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 28

   26 simple_statement: RESULT . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 76
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 29

   25 simple_statement: RETURN .

    $default  reduce using rule 25 (simple_statement)


State 30

   27 simple_statement: SKIP .

    $default  reduce using rule 27 (simple_statement)


State 31

  116 booling: TTRUE .

    $default  reduce using rule 116 (booling)


State 32

   90 ID_token: ID .

    $default  reduce using rule 90 (ID_token)


State 33

  112 const_value: INTEGER .

    $default  reduce using rule 112 (const_value)


State 34

  113 const_value: FLOAT .

    $default  reduce using rule 113 (const_value)


State 35

  114 const_value: SSTRING .

    $default  reduce using rule 114 (const_value)


State 36

    1 program: Declarations Statements .

    $default  reduce using rule 1 (program)


State 37

   15 Statements: Statement . Statements

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    BBEGIN   shift, and go to state 20
    EXIT     shift, and go to state 21
    FFALSE   shift, and go to state 22
    FOR      shift, and go to state 23
    GET      shift, and go to state 24
    IF       shift, and go to state 25
    LOOP     shift, and go to state 26
    PUT      shift, and go to state 27
    RESULT   shift, and go to state 28
    RETURN   shift, and go to state 29
    SKIP     shift, and go to state 30
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    $default  reduce using rule 118 (Eplision)

    Statements             go to state 77
    Statement              go to state 37
    simple_statement       go to state 38
    conditional_statement  go to state 39
    loop_statement         go to state 40
    block_statement        go to state 41
    get_statement          go to state 42
    loop_loop              go to state 43
    for_loop               go to state 44
    exp                    go to state 45
    or_exp                 go to state 46
    and_exp                go to state 47
    not_exp                go to state 48
    compare_exp            go to state 49
    add_exp                go to state 50
    multi_exp              go to state 51
    unary_exp              go to state 52
    all_value              go to state 53
    not_op                 go to state 54
    unary_op               go to state 55
    if_token               go to state 56
    loop_token             go to state 57
    for_token              go to state 58
    begin_token            go to state 59
    ID_token               go to state 60
    LP_token               go to state 61
    const_value            go to state 62
    booling                go to state 63
    Eplision               go to state 64


State 38

   17 Statement: simple_statement .

    $default  reduce using rule 17 (Statement)


State 39

   19 Statement: conditional_statement .

    $default  reduce using rule 19 (Statement)


State 40

   20 Statement: loop_statement .

    $default  reduce using rule 20 (Statement)


State 41

   21 Statement: block_statement .

    $default  reduce using rule 21 (Statement)


State 42

   23 simple_statement: get_statement .

    $default  reduce using rule 23 (simple_statement)


State 43

   31 loop_statement: loop_loop .

    $default  reduce using rule 31 (loop_statement)


State 44

   32 loop_statement: for_loop .

    $default  reduce using rule 32 (loop_statement)


State 45

   18 Statement: exp .

    $default  reduce using rule 18 (Statement)


State 46

   45 exp: or_exp .
   47 or_exp: or_exp . or_op and_exp

    OR  shift, and go to state 78

    $default  reduce using rule 45 (exp)

    or_op  go to state 79


State 47

   46 or_exp: and_exp .
   49 and_exp: and_exp . and_op not_exp

    AND  shift, and go to state 80

    $default  reduce using rule 46 (or_exp)

    and_op  go to state 81


State 48

   48 and_exp: not_exp .

    $default  reduce using rule 48 (and_exp)


State 49

   50 not_exp: compare_exp .
   53 compare_exp: compare_exp . compare_op add_exp

    LT      shift, and go to state 82
    NMT     shift, and go to state 83
    NLT     shift, and go to state 84
    MT      shift, and go to state 85
    EQUAL   shift, and go to state 86
    NEQUAL  shift, and go to state 87

    $default  reduce using rule 50 (not_exp)

    compare_op  go to state 88


State 50

   52 compare_exp: add_exp .
   55 add_exp: add_exp . add_op multi_exp

    PLUS   shift, and go to state 89
    MINUS  shift, and go to state 90

    MINUS     [reduce using rule 52 (compare_exp)]
    $default  reduce using rule 52 (compare_exp)

    add_op  go to state 91


State 51

   54 add_exp: multi_exp .
   57 multi_exp: multi_exp . multi_op unary_exp

    MULTIPLY  shift, and go to state 92
    DIVISION  shift, and go to state 93
    MOD       shift, and go to state 94

    $default  reduce using rule 54 (add_exp)

    multi_op  go to state 95


State 52

   56 multi_exp: unary_exp .

    $default  reduce using rule 56 (multi_exp)


State 53

   58 unary_exp: all_value .

    $default  reduce using rule 58 (unary_exp)


State 54

   51 not_exp: not_op . compare_exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    compare_exp  go to state 96
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 55

   59 unary_exp: unary_op . all_value

    LP       shift, and go to state 17
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    all_value    go to state 97
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 56

   29 conditional_statement: if_token . exp THEN no_function_program else_token no_function_program END if_token
   30                      | if_token . exp THEN no_function_program END if_token

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 98
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 57

   37 loop_loop: loop_token . no_function_program END loop_token

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    no_function_program   go to state 101
    variableDeclarations  go to state 102
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 58

   38 for_loop: for_token . for_statement COLON exp PERIOD PERIOD exp no_function_program END for_token

    DECREASING  shift, and go to state 104

    $default  reduce using rule 118 (Eplision)

    for_statement  go to state 105
    Eplision       go to state 106


State 59

   33 block_statement: begin_token . no_function_program END

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    no_function_program   go to state 107
    variableDeclarations  go to state 102
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 60

   22 simple_statement: ID_token . assign_token exp
   60 all_value: ID_token .
   62          | ID_token . LP_token input_Arguments RP_token
   64          | ID_token . LB_token exp RB_token

    LP      shift, and go to state 17
    LB      shift, and go to state 108
    ASSIGN  shift, and go to state 109

    LP        [reduce using rule 60 (all_value)]
    $default  reduce using rule 60 (all_value)

    assign_token  go to state 110
    LP_token      go to state 111
    LB_token      go to state 112


State 61

   63 all_value: LP_token . exp RP_token

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 113
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 62

   61 all_value: const_value .

    $default  reduce using rule 61 (all_value)


State 63

  115 const_value: booling .

    $default  reduce using rule 115 (const_value)


State 64

   16 Statements: Eplision .

    $default  reduce using rule 16 (Statements)


State 65

    2 Declarations: Declaration Declarations .

    $default  reduce using rule 2 (Declarations)


State 66

    7 const_declaration: const_token ID_token . assign_token exp
    8                  | const_token ID_token . COLON Type assign_token exp

    COLON   shift, and go to state 114
    ASSIGN  shift, and go to state 109

    assign_token  go to state 115


State 67

    9 var_declaration: var_token ID_token . assign_token exp
   10                | var_token ID_token . COLON Type assign_token exp
   11                | var_token ID_token . COLON Type
   12                | var_token ID_token . COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF Type

    COLON   shift, and go to state 116
    ASSIGN  shift, and go to state 109

    assign_token  go to state 117


State 68

   13 funtion_declaration: function_token ID_token . LP Arguments RP COLON Type no_function_program END ID

    LP  shift, and go to state 118


State 69

   14 funtion_declaration: procedure_token ID_token . LP Arguments RP no_function_program END ID

    LP  shift, and go to state 119


State 70

   36 exit_statement: WHEN . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 120
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 71

   28 simple_statement: EXIT exit_statement .

    $default  reduce using rule 28 (simple_statement)


State 72

   35 exit_statement: Eplision .

    $default  reduce using rule 35 (exit_statement)


State 73

   34 get_statement: GET ID_token .

    $default  reduce using rule 34 (get_statement)


State 74

   24 simple_statement: PUT exp .

    $default  reduce using rule 24 (simple_statement)


State 75

   60 all_value: ID_token .
   62          | ID_token . LP_token input_Arguments RP_token
   64          | ID_token . LB_token exp RB_token

    LP  shift, and go to state 17
    LB  shift, and go to state 108

    LP        [reduce using rule 60 (all_value)]
    $default  reduce using rule 60 (all_value)

    LP_token  go to state 111
    LB_token  go to state 112


State 76

   26 simple_statement: RESULT exp .

    $default  reduce using rule 26 (simple_statement)


State 77

   15 Statements: Statement Statements .

    $default  reduce using rule 15 (Statements)


State 78

   65 or_op: OR .

    $default  reduce using rule 65 (or_op)


State 79

   47 or_exp: or_exp or_op . and_exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    and_exp      go to state 121
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 80

   66 and_op: AND .

    $default  reduce using rule 66 (and_op)


State 81

   49 and_exp: and_exp and_op . not_exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    not_exp      go to state 122
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 82

   68 compare_op: LT .

    $default  reduce using rule 68 (compare_op)


State 83

   69 compare_op: NMT .

    $default  reduce using rule 69 (compare_op)


State 84

   70 compare_op: NLT .

    $default  reduce using rule 70 (compare_op)


State 85

   71 compare_op: MT .

    $default  reduce using rule 71 (compare_op)


State 86

   72 compare_op: EQUAL .

    $default  reduce using rule 72 (compare_op)


State 87

   73 compare_op: NEQUAL .

    $default  reduce using rule 73 (compare_op)


State 88

   53 compare_exp: compare_exp compare_op . add_exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    add_exp      go to state 123
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 89

   75 add_op: PLUS .

    $default  reduce using rule 75 (add_op)


State 90

   74 add_op: MINUS .

    $default  reduce using rule 74 (add_op)


State 91

   55 add_exp: add_exp add_op . multi_exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    multi_exp    go to state 124
    unary_exp    go to state 52
    all_value    go to state 53
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 92

   76 multi_op: MULTIPLY .

    $default  reduce using rule 76 (multi_op)


State 93

   77 multi_op: DIVISION .

    $default  reduce using rule 77 (multi_op)


State 94

   78 multi_op: MOD .

    $default  reduce using rule 78 (multi_op)


State 95

   57 multi_exp: multi_exp multi_op . unary_exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    unary_exp    go to state 125
    all_value    go to state 53
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 96

   51 not_exp: not_op compare_exp .
   53 compare_exp: compare_exp . compare_op add_exp

    LT      shift, and go to state 82
    NMT     shift, and go to state 83
    NLT     shift, and go to state 84
    MT      shift, and go to state 85
    EQUAL   shift, and go to state 86
    NEQUAL  shift, and go to state 87

    $default  reduce using rule 51 (not_exp)

    compare_op  go to state 88


State 97

   59 unary_exp: unary_op all_value .

    $default  reduce using rule 59 (unary_exp)


State 98

   29 conditional_statement: if_token exp . THEN no_function_program else_token no_function_program END if_token
   30                      | if_token exp . THEN no_function_program END if_token

    THEN  shift, and go to state 126


State 99

   43 variableDeclarations: const_declaration . variableDeclarations

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    variableDeclarations  go to state 127
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 100

   42 variableDeclarations: var_declaration . variableDeclarations

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    variableDeclarations  go to state 128
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 101

   37 loop_loop: loop_token no_function_program . END loop_token

    END  shift, and go to state 129


State 102

   41 no_function_program: variableDeclarations . Statements

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    BBEGIN   shift, and go to state 20
    EXIT     shift, and go to state 21
    FFALSE   shift, and go to state 22
    FOR      shift, and go to state 23
    GET      shift, and go to state 24
    IF       shift, and go to state 25
    LOOP     shift, and go to state 26
    PUT      shift, and go to state 27
    RESULT   shift, and go to state 28
    RETURN   shift, and go to state 29
    SKIP     shift, and go to state 30
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    $default  reduce using rule 118 (Eplision)

    Statements             go to state 130
    Statement              go to state 37
    simple_statement       go to state 38
    conditional_statement  go to state 39
    loop_statement         go to state 40
    block_statement        go to state 41
    get_statement          go to state 42
    loop_loop              go to state 43
    for_loop               go to state 44
    exp                    go to state 45
    or_exp                 go to state 46
    and_exp                go to state 47
    not_exp                go to state 48
    compare_exp            go to state 49
    add_exp                go to state 50
    multi_exp              go to state 51
    unary_exp              go to state 52
    all_value              go to state 53
    not_op                 go to state 54
    unary_op               go to state 55
    if_token               go to state 56
    loop_token             go to state 57
    for_token              go to state 58
    begin_token            go to state 59
    ID_token               go to state 60
    LP_token               go to state 61
    const_value            go to state 62
    booling                go to state 63
    Eplision               go to state 64


State 103

   44 variableDeclarations: Eplision .

    $default  reduce using rule 44 (variableDeclarations)


State 104

   39 for_statement: DECREASING . ID

    ID  shift, and go to state 131


State 105

   38 for_loop: for_token for_statement . COLON exp PERIOD PERIOD exp no_function_program END for_token

    COLON  shift, and go to state 132


State 106

   40 for_statement: Eplision . ID

    ID  shift, and go to state 133


State 107

   33 block_statement: begin_token no_function_program . END

    END  shift, and go to state 134


State 108

   93 LB_token: LB .

    $default  reduce using rule 93 (LB_token)


State 109

   84 assign_token: ASSIGN .

    $default  reduce using rule 84 (assign_token)


State 110

   22 simple_statement: ID_token assign_token . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 135
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 111

   62 all_value: ID_token LP_token . input_Arguments RP_token

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    $default  reduce using rule 118 (Eplision)

    exp              go to state 136
    or_exp           go to state 46
    and_exp          go to state 47
    not_exp          go to state 48
    compare_exp      go to state 49
    add_exp          go to state 50
    multi_exp        go to state 51
    unary_exp        go to state 52
    all_value        go to state 53
    not_op           go to state 54
    unary_op         go to state 55
    ID_token         go to state 75
    LP_token         go to state 61
    input_Arguments  go to state 137
    F_input          go to state 138
    const_value      go to state 62
    booling          go to state 63
    Eplision         go to state 139


State 112

   64 all_value: ID_token LB_token . exp RB_token

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 140
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 113

   63 all_value: LP_token exp . RP_token

    RP  shift, and go to state 141

    RP_token  go to state 142


State 114

    8 const_declaration: const_token ID_token COLON . Type assign_token exp

    BOOL    shift, and go to state 143
    INT     shift, and go to state 144
    REAL    shift, and go to state 145
    STRING  shift, and go to state 146

    Type  go to state 147


State 115

    7 const_declaration: const_token ID_token assign_token . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 148
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 116

   10 var_declaration: var_token ID_token COLON . Type assign_token exp
   11                | var_token ID_token COLON . Type
   12                | var_token ID_token COLON . ARRAY INTEGER PERIOD PERIOD INTEGER OF Type

    ARRAY   shift, and go to state 149
    BOOL    shift, and go to state 143
    INT     shift, and go to state 144
    REAL    shift, and go to state 145
    STRING  shift, and go to state 146

    Type  go to state 150


State 117

    9 var_declaration: var_token ID_token assign_token . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 151
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 118

   13 funtion_declaration: function_token ID_token LP . Arguments RP COLON Type no_function_program END ID

    ID  shift, and go to state 152

    $default  reduce using rule 118 (Eplision)

    Arguments   go to state 153
    F_Argument  go to state 154
    Eplision    go to state 155


State 119

   14 funtion_declaration: procedure_token ID_token LP . Arguments RP no_function_program END ID

    ID  shift, and go to state 152

    $default  reduce using rule 118 (Eplision)

    Arguments   go to state 156
    F_Argument  go to state 154
    Eplision    go to state 155


State 120

   36 exit_statement: WHEN exp .

    $default  reduce using rule 36 (exit_statement)


State 121

   47 or_exp: or_exp or_op and_exp .
   49 and_exp: and_exp . and_op not_exp

    AND  shift, and go to state 80

    $default  reduce using rule 47 (or_exp)

    and_op  go to state 81


State 122

   49 and_exp: and_exp and_op not_exp .

    $default  reduce using rule 49 (and_exp)


State 123

   53 compare_exp: compare_exp compare_op add_exp .
   55 add_exp: add_exp . add_op multi_exp

    PLUS   shift, and go to state 89
    MINUS  shift, and go to state 90

    MINUS     [reduce using rule 53 (compare_exp)]
    $default  reduce using rule 53 (compare_exp)

    add_op  go to state 91


State 124

   55 add_exp: add_exp add_op multi_exp .
   57 multi_exp: multi_exp . multi_op unary_exp

    MULTIPLY  shift, and go to state 92
    DIVISION  shift, and go to state 93
    MOD       shift, and go to state 94

    $default  reduce using rule 55 (add_exp)

    multi_op  go to state 95


State 125

   57 multi_exp: multi_exp multi_op unary_exp .

    $default  reduce using rule 57 (multi_exp)


State 126

   29 conditional_statement: if_token exp THEN . no_function_program else_token no_function_program END if_token
   30                      | if_token exp THEN . no_function_program END if_token

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    no_function_program   go to state 157
    variableDeclarations  go to state 102
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 127

   43 variableDeclarations: const_declaration variableDeclarations .

    $default  reduce using rule 43 (variableDeclarations)


State 128

   42 variableDeclarations: var_declaration variableDeclarations .

    $default  reduce using rule 42 (variableDeclarations)


State 129

   37 loop_loop: loop_token no_function_program END . loop_token

    LOOP  shift, and go to state 26

    loop_token  go to state 158


State 130

   41 no_function_program: variableDeclarations Statements .

    $default  reduce using rule 41 (no_function_program)


State 131

   39 for_statement: DECREASING ID .

    $default  reduce using rule 39 (for_statement)


State 132

   38 for_loop: for_token for_statement COLON . exp PERIOD PERIOD exp no_function_program END for_token

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 159
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 133

   40 for_statement: Eplision ID .

    $default  reduce using rule 40 (for_statement)


State 134

   33 block_statement: begin_token no_function_program END .

    $default  reduce using rule 33 (block_statement)


State 135

   22 simple_statement: ID_token assign_token exp .

    $default  reduce using rule 22 (simple_statement)


State 136

  106 F_input: exp .

    $default  reduce using rule 106 (F_input)


State 137

   62 all_value: ID_token LP_token input_Arguments . RP_token

    RP  shift, and go to state 141

    RP_token  go to state 160


State 138

  102 input_Arguments: F_input . R_inputs

    COMMA  shift, and go to state 161

    $default  reduce using rule 118 (Eplision)

    R_inputs  go to state 162
    R_input   go to state 163
    Eplision  go to state 164


State 139

  103 input_Arguments: Eplision .

    $default  reduce using rule 103 (input_Arguments)


State 140

   64 all_value: ID_token LB_token exp . RB_token

    RB  shift, and go to state 165

    RB_token  go to state 166


State 141

   92 RP_token: RP .

    $default  reduce using rule 92 (RP_token)


State 142

   63 all_value: LP_token exp RP_token .

    $default  reduce using rule 63 (all_value)


State 143

  111 Type: BOOL .

    $default  reduce using rule 111 (Type)


State 144

  108 Type: INT .

    $default  reduce using rule 108 (Type)


State 145

  109 Type: REAL .

    $default  reduce using rule 109 (Type)


State 146

  110 Type: STRING .

    $default  reduce using rule 110 (Type)


State 147

    8 const_declaration: const_token ID_token COLON Type . assign_token exp

    ASSIGN  shift, and go to state 109

    assign_token  go to state 167


State 148

    7 const_declaration: const_token ID_token assign_token exp .

    $default  reduce using rule 7 (const_declaration)


State 149

   12 var_declaration: var_token ID_token COLON ARRAY . INTEGER PERIOD PERIOD INTEGER OF Type

    INTEGER  shift, and go to state 168


State 150

   10 var_declaration: var_token ID_token COLON Type . assign_token exp
   11                | var_token ID_token COLON Type .

    ASSIGN  shift, and go to state 109

    $default  reduce using rule 11 (var_declaration)

    assign_token  go to state 169


State 151

    9 var_declaration: var_token ID_token assign_token exp .

    $default  reduce using rule 9 (var_declaration)


State 152

   99 F_Argument: ID . COLON Type
  100           | ID . COLON INTEGER PERIOD PERIOD INTEGER OF Type

    COLON  shift, and go to state 170


State 153

   13 funtion_declaration: function_token ID_token LP Arguments . RP COLON Type no_function_program END ID

    RP  shift, and go to state 171


State 154

   95 Arguments: F_Argument . R_Arguments

    COMMA  shift, and go to state 172

    $default  reduce using rule 118 (Eplision)

    R_Arguments  go to state 173
    R_Argument   go to state 174
    Eplision     go to state 175


State 155

   96 Arguments: Eplision .

    $default  reduce using rule 96 (Arguments)


State 156

   14 funtion_declaration: procedure_token ID_token LP Arguments . RP no_function_program END ID

    RP  shift, and go to state 176


State 157

   29 conditional_statement: if_token exp THEN no_function_program . else_token no_function_program END if_token
   30                      | if_token exp THEN no_function_program . END if_token

    ELSE  shift, and go to state 177
    END   shift, and go to state 178

    else_token  go to state 179


State 158

   37 loop_loop: loop_token no_function_program END loop_token .

    $default  reduce using rule 37 (loop_loop)


State 159

   38 for_loop: for_token for_statement COLON exp . PERIOD PERIOD exp no_function_program END for_token

    PERIOD  shift, and go to state 180


State 160

   62 all_value: ID_token LP_token input_Arguments RP_token .

    $default  reduce using rule 62 (all_value)


State 161

  107 R_input: COMMA . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 181
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 162

  102 input_Arguments: F_input R_inputs .

    $default  reduce using rule 102 (input_Arguments)


State 163

  104 R_inputs: R_input . R_inputs

    COMMA  shift, and go to state 161

    $default  reduce using rule 118 (Eplision)

    R_inputs  go to state 182
    R_input   go to state 163
    Eplision  go to state 164


State 164

  105 R_inputs: Eplision .

    $default  reduce using rule 105 (R_inputs)


State 165

   94 RB_token: RB .

    $default  reduce using rule 94 (RB_token)


State 166

   64 all_value: ID_token LB_token exp RB_token .

    $default  reduce using rule 64 (all_value)


State 167

    8 const_declaration: const_token ID_token COLON Type assign_token . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 183
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 168

   12 var_declaration: var_token ID_token COLON ARRAY INTEGER . PERIOD PERIOD INTEGER OF Type

    PERIOD  shift, and go to state 184


State 169

   10 var_declaration: var_token ID_token COLON Type assign_token . exp

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 185
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 170

   99 F_Argument: ID COLON . Type
  100           | ID COLON . INTEGER PERIOD PERIOD INTEGER OF Type

    BOOL     shift, and go to state 143
    INT      shift, and go to state 144
    REAL     shift, and go to state 145
    STRING   shift, and go to state 146
    INTEGER  shift, and go to state 186

    Type  go to state 187


State 171

   13 funtion_declaration: function_token ID_token LP Arguments RP . COLON Type no_function_program END ID

    COLON  shift, and go to state 188


State 172

  101 R_Argument: COMMA . F_Argument

    ID  shift, and go to state 152

    F_Argument  go to state 189


State 173

   95 Arguments: F_Argument R_Arguments .

    $default  reduce using rule 95 (Arguments)


State 174

   97 R_Arguments: R_Argument . R_Arguments

    COMMA  shift, and go to state 172

    $default  reduce using rule 118 (Eplision)

    R_Arguments  go to state 190
    R_Argument   go to state 174
    Eplision     go to state 175


State 175

   98 R_Arguments: Eplision .

    $default  reduce using rule 98 (R_Arguments)


State 176

   14 funtion_declaration: procedure_token ID_token LP Arguments RP . no_function_program END ID

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    no_function_program   go to state 191
    variableDeclarations  go to state 102
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 177

   86 else_token: ELSE .

    $default  reduce using rule 86 (else_token)


State 178

   30 conditional_statement: if_token exp THEN no_function_program END . if_token

    IF  shift, and go to state 25

    if_token  go to state 192


State 179

   29 conditional_statement: if_token exp THEN no_function_program else_token . no_function_program END if_token

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    no_function_program   go to state 193
    variableDeclarations  go to state 102
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 180

   38 for_loop: for_token for_statement COLON exp PERIOD . PERIOD exp no_function_program END for_token

    PERIOD  shift, and go to state 194


State 181

  107 R_input: COMMA exp .

    $default  reduce using rule 107 (R_input)


State 182

  104 R_inputs: R_input R_inputs .

    $default  reduce using rule 104 (R_inputs)


State 183

    8 const_declaration: const_token ID_token COLON Type assign_token exp .

    $default  reduce using rule 8 (const_declaration)


State 184

   12 var_declaration: var_token ID_token COLON ARRAY INTEGER PERIOD . PERIOD INTEGER OF Type

    PERIOD  shift, and go to state 195


State 185

   10 var_declaration: var_token ID_token COLON Type assign_token exp .

    $default  reduce using rule 10 (var_declaration)


State 186

  100 F_Argument: ID COLON INTEGER . PERIOD PERIOD INTEGER OF Type

    PERIOD  shift, and go to state 196


State 187

   99 F_Argument: ID COLON Type .

    $default  reduce using rule 99 (F_Argument)


State 188

   13 funtion_declaration: function_token ID_token LP Arguments RP COLON . Type no_function_program END ID

    BOOL    shift, and go to state 143
    INT     shift, and go to state 144
    REAL    shift, and go to state 145
    STRING  shift, and go to state 146

    Type  go to state 197


State 189

  101 R_Argument: COMMA F_Argument .

    $default  reduce using rule 101 (R_Argument)


State 190

   97 R_Arguments: R_Argument R_Arguments .

    $default  reduce using rule 97 (R_Arguments)


State 191

   14 funtion_declaration: procedure_token ID_token LP Arguments RP no_function_program . END ID

    END  shift, and go to state 198


State 192

   30 conditional_statement: if_token exp THEN no_function_program END if_token .

    $default  reduce using rule 30 (conditional_statement)


State 193

   29 conditional_statement: if_token exp THEN no_function_program else_token no_function_program . END if_token

    END  shift, and go to state 199


State 194

   38 for_loop: for_token for_statement COLON exp PERIOD PERIOD . exp no_function_program END for_token

    LP       shift, and go to state 17
    MINUS    shift, and go to state 18
    NOT      shift, and go to state 19
    FFALSE   shift, and go to state 22
    TTRUE    shift, and go to state 31
    ID       shift, and go to state 32
    INTEGER  shift, and go to state 33
    FLOAT    shift, and go to state 34
    SSTRING  shift, and go to state 35

    exp          go to state 200
    or_exp       go to state 46
    and_exp      go to state 47
    not_exp      go to state 48
    compare_exp  go to state 49
    add_exp      go to state 50
    multi_exp    go to state 51
    unary_exp    go to state 52
    all_value    go to state 53
    not_op       go to state 54
    unary_op     go to state 55
    ID_token     go to state 75
    LP_token     go to state 61
    const_value  go to state 62
    booling      go to state 63


State 195

   12 var_declaration: var_token ID_token COLON ARRAY INTEGER PERIOD PERIOD . INTEGER OF Type

    INTEGER  shift, and go to state 201


State 196

  100 F_Argument: ID COLON INTEGER PERIOD . PERIOD INTEGER OF Type

    PERIOD  shift, and go to state 202


State 197

   13 funtion_declaration: function_token ID_token LP Arguments RP COLON Type . no_function_program END ID

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    no_function_program   go to state 203
    variableDeclarations  go to state 102
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 198

   14 funtion_declaration: procedure_token ID_token LP Arguments RP no_function_program END . ID

    ID  shift, and go to state 204


State 199

   29 conditional_statement: if_token exp THEN no_function_program else_token no_function_program END . if_token

    IF  shift, and go to state 25

    if_token  go to state 205


State 200

   38 for_loop: for_token for_statement COLON exp PERIOD PERIOD exp . no_function_program END for_token

    CONST  shift, and go to state 1
    VAR    shift, and go to state 4

    $default  reduce using rule 118 (Eplision)

    const_declaration     go to state 99
    var_declaration       go to state 100
    no_function_program   go to state 206
    variableDeclarations  go to state 102
    const_token           go to state 11
    var_token             go to state 12
    Eplision              go to state 103


State 201

   12 var_declaration: var_token ID_token COLON ARRAY INTEGER PERIOD PERIOD INTEGER . OF Type

    OF  shift, and go to state 207


State 202

  100 F_Argument: ID COLON INTEGER PERIOD PERIOD . INTEGER OF Type

    INTEGER  shift, and go to state 208


State 203

   13 funtion_declaration: function_token ID_token LP Arguments RP COLON Type no_function_program . END ID

    END  shift, and go to state 209


State 204

   14 funtion_declaration: procedure_token ID_token LP Arguments RP no_function_program END ID .

    $default  reduce using rule 14 (funtion_declaration)


State 205

   29 conditional_statement: if_token exp THEN no_function_program else_token no_function_program END if_token .

    $default  reduce using rule 29 (conditional_statement)


State 206

   38 for_loop: for_token for_statement COLON exp PERIOD PERIOD exp no_function_program . END for_token

    END  shift, and go to state 210


State 207

   12 var_declaration: var_token ID_token COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF . Type

    BOOL    shift, and go to state 143
    INT     shift, and go to state 144
    REAL    shift, and go to state 145
    STRING  shift, and go to state 146

    Type  go to state 211


State 208

  100 F_Argument: ID COLON INTEGER PERIOD PERIOD INTEGER . OF Type

    OF  shift, and go to state 212


State 209

   13 funtion_declaration: function_token ID_token LP Arguments RP COLON Type no_function_program END . ID

    ID  shift, and go to state 213


State 210

   38 for_loop: for_token for_statement COLON exp PERIOD PERIOD exp no_function_program END . for_token

    FOR  shift, and go to state 23

    for_token  go to state 214


State 211

   12 var_declaration: var_token ID_token COLON ARRAY INTEGER PERIOD PERIOD INTEGER OF Type .

    $default  reduce using rule 12 (var_declaration)


State 212

  100 F_Argument: ID COLON INTEGER PERIOD PERIOD INTEGER OF . Type

    BOOL    shift, and go to state 143
    INT     shift, and go to state 144
    REAL    shift, and go to state 145
    STRING  shift, and go to state 146

    Type  go to state 215


State 213

   13 funtion_declaration: function_token ID_token LP Arguments RP COLON Type no_function_program END ID .

    $default  reduce using rule 13 (funtion_declaration)


State 214

   38 for_loop: for_token for_statement COLON exp PERIOD PERIOD exp no_function_program END for_token .

    $default  reduce using rule 38 (for_loop)


State 215

  100 F_Argument: ID COLON INTEGER PERIOD PERIOD INTEGER OF Type .

    $default  reduce using rule 100 (F_Argument)
